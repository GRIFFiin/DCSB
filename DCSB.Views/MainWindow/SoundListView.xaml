<UserControl x:Class="DCSB.Views.MainWindow.SoundListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Controls="clr-namespace:DCSB.Controls;assembly=DCSB.Controls"
             xmlns:Converters="clr-namespace:DCSB.Converters;assembly=DCSB.Converters"
             xmlns:Interactivity="clr-namespace:DCSB.Interactivity;assembly=DCSB.Interactivity"
             mc:Ignorable="d" 
             MinHeight="70" 
             MinWidth="180"
             Padding="3,0,3,0"
             d:DesignHeight="300" 
             d:DesignWidth="300" Foreground="Black" Background="#FF2B2B2B">

    <UserControl.Resources>
        <Converters:VolumeIconConverter x:Key="volumeIconConverter" />
        <Converters:VKeysToStringConverter x:Key="vKeysToStringConverter" />
        <Converters:StringToVisibilityConverter x:Key="stringToVisibilityConverter" />
    </UserControl.Resources>

    <DockPanel>
        <DockPanel DockPanel.Dock="Top">
            <Label DockPanel.Dock="Left" Foreground="#e8e6e3">
                <ContentControl.Style>
                    <Style TargetType="{x:Type ContentControl}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="true">
                                <Setter Property="Content" Value="Sounds" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="false">
                                <Setter Property="Content" Value="Sounds (Disabled)" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </Label>

            <Slider x:Name="VolumeSlider"
                    VerticalAlignment="Center"
                    DockPanel.Dock="Right"
                    Width="100"
                    Maximum="100"
                    IsMoveToPointEnabled="True"
                    ToolTip="General Volume (affect client and output side"
                    AutoToolTipPlacement="BottomRight"
                    Value="{Binding CurrentVolume}" ValueChanged="VolumeSlider_ValueChanged" />

            <Controls:IconButton DockPanel.Dock="Right" 
                                 Margin="3"
                                 Content="{Binding ElementName=VolumeSlider, Path=Value, Converter={StaticResource volumeIconConverter}, ConverterParameter={StaticResource VolumeIcons}}" 
                                 Command="{Binding MuteCommand}"
                                 Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                 Height="{Binding ActualHeight, ElementName=VolumeSlider}">
                <Controls:IconButton.Style>
                    <Style TargetType="{x:Type Controls:IconButton}">
                        <Style.Setters>
                            <Setter Property="ToolTip" Value="Mute soundboard (every side)" />
                        </Style.Setters>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Value, ElementName=VolumeSlider}" Value="0">
                                <Setter Property="ToolTip" Value="Unute soundboard (every side)" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Controls:IconButton.Style>
            </Controls:IconButton>

            <StackPanel Width="25" RenderTransformOrigin="-0.742,0.538" />
            <Controls:IconButton
                Margin="3,0,0,0"
                Content="{Binding Value, ConverterParameter={StaticResource VolumeIcons}, Converter={StaticResource volumeIconConverter}, ElementName=SecondaryVolumeSlider}" 
                Command="{Binding MuteSecondaryCommand}"
                Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                Height="{Binding ActualHeight, ElementName=SecondaryVolumeSlider}" DockPanel.Dock="Right">
                <Controls:IconButton.Style>
                    <Style TargetType="{x:Type Controls:IconButton}">
                        <Setter Property="ToolTip" Value="Mute client side volume" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Value, ElementName=SecondaryVolumeSlider}" Value="0">
                                <Setter Property="ToolTip" Value="Unmute client side volume" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Controls:IconButton.Style>
            </Controls:IconButton>
            <Slider x:Name="SecondaryVolumeSlider"
                DockPanel.Dock="Right"
                Maximum="100"
                IsMoveToPointEnabled="True"
                ToolTip="Client side volume (Second device in settings) "
                Value="{Binding SecondaryDeviceVolume}" Height="18" AutoToolTipPlacement="TopLeft" MinWidth="100" MinHeight="18" HorizontalAlignment="Right" Width="100" />
        </DockPanel>

        <DockPanel DockPanel.Dock="Bottom">
            <Controls:IconButton DockPanel.Dock="Left" 
                                 Content="{StaticResource AddIcon}"
                                 Margin="2"
                                 Command="{Binding AddSoundCommand}"
                                 ToolTip="Add Sound" />
            <Controls:IconButton DockPanel.Dock="Left" 
                                 Content="{StaticResource RemoveIcon}" 
                                 Margin="2"
                                 Command="{Binding RemoveSoundCommand}"
                                 ToolTip="Remove Sound" />
            <Controls:IconButton DockPanel.Dock="Right" 
                                 Content="{StaticResource PlayIcon}" 
                                 Margin="2"
                                 Command="{Binding ContinueCommand}"
                                 ToolTip="Play" />
            <Controls:IconButton DockPanel.Dock="Right" 
                                 Content="{StaticResource PauseIcon}" 
                                 Margin="2"
                                 Command="{Binding PauseCommand}"
                                 ToolTip="Pause" />
            <Controls:IconButton DockPanel.Dock="Right" 
                                 Content="{StaticResource StopIcon}" 
                                 Margin="2"
                                 Command="{Binding StopCommand}"
                                 ToolTip="Stop" />
            <StackPanel />
        </DockPanel>

        <DataGrid ItemsSource="{Binding ConfigurationModel.SelectedPreset.SoundCollection}" 
                  SelectedItem="{Binding ConfigurationModel.SelectedPreset.SelectedSound, Mode=TwoWay}"
                  Interactivity:Commands.DoubleClickCommand="{Binding PlayCommand}"
                  CanUserReorderColumns="False"
                  SelectionMode="Single"
                  CanUserDeleteRows="False" 
                  HeadersVisibility="Column"
                  CanUserAddRows="False"
                  HorizontalScrollBarVisibility="Disabled" SelectionChanged="DataGrid_SelectionChanged_1" Foreground="#FFAAAAAA" AutoGenerateColumns="False" AlternatingRowBackground="Black" RowBackground="#FF191919">

            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Add" 
                              Command="{Binding AddSoundCommand}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>

            <DataGrid.Resources>
                <ContextMenu x:Key="RowMenu" DataContext="{Binding}">
                    <MenuItem Header="Edit" 
                              Command="{Binding DataContext.OpenSoundCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                    <MenuItem Header="Remove" 
                              Command="{Binding DataContext.RemoveSoundCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                </ContextMenu>
            </DataGrid.Resources>
            <DataGrid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="#FF171717" Offset="1"/>
                </LinearGradientBrush>
            </DataGrid.Background>

            <DataGrid.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding RemoveSoundCommand}" />
            </DataGrid.InputBindings>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow" >
                    <Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" 
                                    IsReadOnly="True" 
                                    Binding="{Binding Name}" />
                <DataGridTemplateColumn Header="Keys"
                                        IsReadOnly="True"
                                        Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DockPanel>
                                <TextBlock Text="{Binding Keys, Converter={StaticResource vKeysToStringConverter}}" />
                                <Ellipse Width="10" 
                                         Height="10" 
                                         Margin="3,0"
                                         Fill="#FFD10000" 
                                         HorizontalAlignment="Right"
                                         Visibility="{Binding Error, Converter={StaticResource stringToVisibilityConverter}}">
                                    <Ellipse.ToolTip>
                                        <ToolTip Content="{Binding Error}" />
                                    </Ellipse.ToolTip>
                                </Ellipse>
                            </DockPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</UserControl>
